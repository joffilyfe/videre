!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define("videre",["exports"],t):t(e.Videre=e.Videre||{})}(this,function(e){"use strict";var t=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},n=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),i=function(){function e(n){t(this,e),this.element=n}return n(e,[{key:"toggle",value:function(){this.play()||this.pause()}},{key:"play",value:function(){return this.element.paused&&this.element.play()}},{key:"pause",value:function(){return!this.element.paused&&this.element.pause()}},{key:"isPaused",value:function(){return this.element.paused}},{key:"event",value:function(e,t){for(var n=0,i=e.length;n<i;n++)this.element.addEventListener(e[n],function(){return t()},!1)}},{key:"source",get:function(){return this.element.src},set:function(e){this.element.src=e}},{key:"total",get:function(){return this.element.duration}},{key:"time",get:function(){return this.element.currentTime},set:function(e){this.element.currentTime=e}}]),e}(),r=function(){function e(n){t(this,e),this.element=n}return n(e,[{key:"updateWidth",value:function(e,t){var n=100*e/t;this.element.style.width=n+"%"}}]),e}(),s=function(){function e(n){t(this,e),this.element=n}return n(e,[{key:"update",value:function(e){e?(this.element.classList.add("icon-play"),this.element.classList.remove("icon-pause")):(this.element.classList.add("icon-pause"),this.element.classList.remove("icon-play"))}}]),e}(),o=function(){function e(n){t(this,e),this.containerId=n}return n(e,[{key:"getContainer",value:function(){return this.containerId&&!this.container&&(this.container=document.querySelector(this.containerId)||document.getElementsByTagName("body")[0]),this.container&&this.containerId||(this.container=document.getElementsByTagName("body")[0]),this.container}},{key:"getPlayerWrapper",value:function(){return this.playerwrapper||(this.playerwrapper=document.querySelector(".player-wrapper")),this.playerwrapper}},{key:"getVideo",value:function(){return this.video||(this.video=new i(document.querySelector("video"))),this.video}},{key:"getPlaybackButton",value:function(){return this.playBackButton||(this.playBackButton=new s(document.getElementById("btn-playback"))),this.playBackButton}},{key:"getProgressContainer",value:function(){return this.progressContainer||(this.progressContainer=document.querySelector("#progress-container")),this.progressContainer}},{key:"getProgressBar",value:function(){return this.progressBar||(this.progressBar=new r(document.querySelector("#progress-bar"))),this.progressBar}},{key:"getFullscreenButton",value:function(){return this.fullscreenbutton||(this.fullscreenbutton=document.querySelector("#btn-fullscreen")),this.fullscreenbutton}},{key:"setVideoSource",value:function(e){this.video.src=e}}]),e}(),u=function(e,t){function n(n){if(r.down||"click"===n.type){var s=100*n.offsetX/e.offsetWidth;t.style.width=s+"%",i(s)}}var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:function(e){return e},r={down:!1,move:!1,stop:!1};e.addEventListener("mousedown",function(){return r.down=!0},!1),e.addEventListener("mouseup",function(){return r.down=!1},!1),e.addEventListener("click",n),e.addEventListener("mousemove",n)},a=function(){function e(){t(this,e)}return n(e,null,[{key:"listen",value:function(e,t,n){for(var i=0,r=t.length;i<r;i++)e.addEventListener(t[i],function(){return n()},!1)}}]),e}(),l=function(){function e(n){t(this,e),this.elements=n,this.bindVideoEvents(),this.bindPlaybackButtonEvents(),this.bindProgressBarEvents()}return n(e,[{key:"bindVideoEvents",value:function(){var e=this.elements.getVideo(),t=this.elements.getProgressBar(),n=this.elements.getPlaybackButton();a.listen(e.element,["timeupdate"],function(){t.updateWidth(e.time,e.total)}),a.listen(e.element,["playing","pause"],function(){n.update(e.isPaused())})}},{key:"bindPlaybackButtonEvents",value:function(){var e=this.elements.getPlaybackButton(),t=this.elements.getVideo();a.listen(e.element,["click"],function(){t.toggle()})}},{key:"bindProgressBarEvents",value:function(){var e=this.elements.getProgressBar(),t=this.elements.getVideo(),n=this.elements.getProgressContainer();u(n,e.element,function(e){t.time=t.total*e/100})}}]),e}(),c=function(){function e(n){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};t(this,e),this.elements=n,this.options=i,this.render()}return n(e,[{key:"renderTemplate",value:function(){return'\n      <div class="player-wrapper">\n        <div class="player-video">\n          <video></video>\n        </div>\n        <div class="player-overlay">\n            <div id="progress-container">\n              <div id="progress-bar"></div>\n            </div>\n            <div class="player-control">\n              <button id="btn-playback" class="player-button -play icon-play"></button>\n              <button id="btn-fullscreen" class="player-button -full-screen icon-resize-full"></button>\n            </div>\n          </div>\n      </div>'}},{key:"render",value:function(){this.elements.getContainer().innerHTML=this.renderTemplate()}}]),e}(),d=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};t(this,e),this.options=n,this.elements=new o(n.containerId),this.view=new c(this.elements),this.control=new l(this.elements),this.setVideo()}return n(e,[{key:"setVideo",value:function(){this.elements.getVideo().source=this.options.src}},{key:"render",value:function(){var e=new c(this.elements);e.render()}}]),e}(),h=function(e){return new d(e)};e.Player=h,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
